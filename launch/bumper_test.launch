<launch>

  <!-- launch gazebo world -->
  <include file="$(find gazebo_ros)/launch/empty_world.launch">
    <arg name="world_name" value="$(find hallway_sim)/gazebo/emptyworld.world"/>
  </include>

  <node name="timestamp" pkg="hallway_sim" type="timestamp.sh"/>

  <!-- spawn room into gazebo -->
  <node name="spawn_room" pkg="gazebo_ros" type="spawn_model" args="-file $(find hallway_sim)/urdf/room.urdf -urdf -z 0 -model room" />

  <!-- set robot model -->
  <arg name="model" default="$(find floatinghead_description)/urdf/floatinghead_overall.urdf"/>

  <!-- set arm model-->
  <!-- <arg name="arm_model" default="$(find arm_description)/urdf/Arm_urdf.xacro"/>
  <include default="$(find arm_description)/launch/all_spawn.launch"/> -->

  <!-- send fake joint values -->
  <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="TRUE"/>
  </node>

  <!-- Combine joint values -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"/>

  <!-- initiate rviz -->
  <node type="rviz" name="rviz" pkg="rviz" args="-d $(find floatinghead_description)/rviz/floatinghead_overall.rviz" />
  <param name="robot_description" command="cat $(arg model)" />

  <!-- spawn robot -->
  <node name="spawn_robot" pkg="gazebo_ros" type="spawn_model" args="-file $(find floatinghead_description)/urdf/floatinghead_overall.urdf -urdf -z .1 -model floatinghead" />
  <node name="rqt_gui" pkg="rqt_gui" type="rqt_gui" args="--perspective-file $(find floatinghead_description)/rqt/floatinghead.perspective"/>

  <!-- run control nodes -->
  <node name="lidar_quad_node" pkg="hallway_sim" type="lidar_quad_node.py"/>
  <node name="gazebo_drive_node" pkg="hallway_sim" type="gazebo_drive_node.py"/>

          <!-- Load Controllers-->
        <rosparam command="load" file="$(find arm_description)/config/joints.yaml"/>

        <!-- Controllers -->
        <node name="controller_spawner" pkg="controller_manager" type="spawner"
            respawn="false" output="screen" ns="/openArm"
            args="--namespace=/openArm
            joint_state_controller
            joint1_position_controller
            joint2_position_controller
            joint3_position_controller
            joint4_position_controller
            --timeout 60">
        </node>

</launch>
